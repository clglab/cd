#include<stdio.h>
#include<string.h>
#include<stdlib.h>
char input[20],stack[30];
int ip=0,top=-1;
void push(char c)
{
  stack[++top]=c;
}
void pop()
{
 if(top==-1)
 		printf("underflow");
 else
 		top--;
}
void stkdis()
{
	for(int i=0;i<=top;i++)
	printf("%c",stack[i]);
}
void inpdis()
{
	for(int i=ip;i<strlen(input);i++)
			printf("%c",input[i]);`	
}
void error()
{
	printf("Error!!\n");
	exit(0);
}
int reduce()
{
	if(stack[top]=='T')
	{
		if(stack[top-1]=='+' && stack[top-2]=='E')
		{
				if(input[ip]=='*')
				return 0;
				pop();pop();pop();
				push('E');
				printf("Reduce by E->E+T");
		}
	else
	{
		pop();
		push('E');
		printf("Reduce by E->T");
	}
	return 1;
	}
	else if(stack[top]=='F')
	{
		if(stack[top-1]=='*' && stack[top-2]=='T')
		{
		pop();pop();pop();
		push('T');
		printf("reduce by T->T*F");
		}
		else
		{
		pop();
		push('T');
		printf("reduce by T->F");
		}
		return 1;
	}
	else if(stack[top]=='i')
	{
		pop();
		push('F');
		printf("reduce by F->i");
		return 1;
	} 		
	else if(stack[top]==')')
	{
		if(stack[top-1]=='E' && stack[top-2]=='(')
		{
		pop();pop();pop();
		push('F');
		printf("reduce by F->(E)");
		}
		return 1;
	}
	else 
	return 0;
}
 void main()
  {
  printf("Enter input:");
  scanf("%s",input);
  push('$');
  printf("Stack\t\tInput\t\tMoves\n");
  while(1)
  {
  	stkdis();
  	printf("\t\t");
  	inpdis();
  	printf("\t\t");
  	switch(input[ip])
  	{
  		case 'i':ip++;
  		        push('i');
  		        printf("shift i");
  		        break;
  		case '+':if(reduce())
  			break;
  		         else
  		         {
  		         	ip++;
  		         	push('+');
  		         	printf("shift +");
  		         }
  		         break;
  	       case '*':if(reduce())
  	       break;
  	       else
  	       {
  	       ip++;
  	       push('*');
  	       printf("shift *");
  	       }
  	       break;
  	       case '$':if(reduce())
  	       		break;
  	       	       else if(stack[top]=='E' && stack[top-1]=='$')
  	       	       {
  	       	       	printf("Succesful parsing\n");
  	       	       	exit(0);
  	       	       	}
  	       	       	else
  	       	       	error();
  	       	     default:error();
  	       	     }
  	       	     printf("\n");
  	       	     }
  	       	     }

