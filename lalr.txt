#include<stdio.h>
#include<stdlib.h>
char arr[20],stack[20];
int ip=0,top=-1;
void disp();
void push(char a);
void pop();
void ipdisp();
void error();
void disp()
{
for(int i=0;i<=top;i++)
 printf("%c",stack[i]);
}
void ipdisp()
{
for(int i=ip;arr[i]!='\0';i++)
 printf("%c",arr[i]);
}
void push(char X)
{
if(top>=20)
  {
  printf("\n overflow\n");
  }
else
{
top++;
stack[top]=X;
}
}
void pop()
{
if(top<0)
  {
  printf("\n underflow\n");
  }
else
{
top--;
}
}

void error()
{
printf("not parrsed");
exit(0);
}

int main()
{
int flag=0;
printf("enter the input:");
scanf("%s",arr);
push('0');
printf("\n stack-content     input-data\n");
while(1)
{
disp();
printf("-------------");
ipdisp();
printf("\n");
switch(stack[top])
{

case '0':if(arr[ip]=='c')
          {
          push('c');
          push('3');ip++;
          }
         else if(arr[ip]=='d')
         {
          push('d');
          push('4');ip++;
         }
         else
         {
          error();
         }
        break;

case '1':if(arr[ip]=='$')
          {
         
          printf("succesfully parsed");
          exit(1);
         }
         else
         {
          error();
         }
        break;
case '2':if(arr[ip]=='c')
          {
          push('c');
          push('6');ip++;
          }
        else if(arr[ip]=='d')
          {
          push('d');
          push('7');ip++;
          }
         else
         {
         error();
         }
         break;
case '3':if(arr[ip]=='c')
          {
          push('c');
          push('3');ip++;
          }
        else if(arr[ip]=='d')
          {
          push('d');
          push('4');ip++;
          }
         else
         {
         error();
         }
         break;
case '4':if(arr[ip]=='c'||arr[ip]=='d')
          {
          pop();pop();push('C');
          if(stack[top-1]=='0'){push('2');}
          else if(stack[top-1]=='2'){push('5');}
          else if(stack[top-1]=='3'){push('8');}
          else if(stack[top-1]=='6'){push('9');}
          else {error();}
         }
         else
         {
          error();
         }
        break;
case '5':if(arr[ip]=='$')
          {
          pop();pop();pop();pop();
          push('S');
          if(stack[top-1]=='0'){push('1');}
         
          else {error();}
          }
         else
         {
         error();
         }
         break;
case '6':if(arr[ip]=='c')
          {
          push('c');
          push('6');ip++;
          }
         else if(arr[ip]=='d')
         {
          push('d');
          push('7');ip++;
         }
         else
         {
          error();
         }
        break;
case '7':if(arr[ip]=='$')
          {
          pop();pop();push('C');
          if(stack[top-1]=='0'){push('2');}
          else if(stack[top-1]=='2'){push('5');}
          else if(stack[top-1]=='3'){push('8');}
          else if(stack[top-1]=='6'){push('9');}
          else {error();}
         }
         else
         {
          error();
         }
        break;
case '8':if(arr[ip]=='c'||arr[ip]=='d')
          {
          pop();pop();pop();pop();push('C');
          if(stack[top-1]=='0'){push('2');}
          else if(stack[top-1]=='2'){push('5');}
          else if(stack[top-1]=='3'){push('8');}
          else if(stack[top-1]=='6'){push('9');}
          else {error();}
         }
         else
         {
          error();
         }
        break;
case '9':if(arr[ip]=='$')
          {
          pop();pop();pop();pop();push('C');
          if(stack[top-1]=='0'){push('2');}
          else if(stack[top-1]=='2'){push('5');}
          else if(stack[top-1]=='3'){push('8');}
          else if(stack[top-1]=='6'){push('9');}
          else {error();}
         }
         else
         {
         error();
         }
         break;

default :printf("invalid");
         error();
         break;
}
}
}
